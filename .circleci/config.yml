
version: 2.1

jobs:
  arm_gcc:
    parameters:
      scheduler:
        type: string
      topology:
        type: string
    machine:
      image: ubuntu-2404:edge
    resource_class: arm.medium
    environment:
      CC: gcc-14
      CXX: g++-14
    steps:
      - checkout
      - run: |
          sudo apt-add-repository -y universe
          sudo apt-get install -y gcc-14 g++-14
          sudo apt-get install -y autoconf automake libtool
          sudo apt-get install -y hwloc libhwloc-dev
      - run: |
          ./autogen.sh
          ./configure --enable-picky --with-scheduler=<< parameters.scheduler >> --with-topology=<< parameters.topology >>
          make -j2
      - run:
          command: timeout --foreground -k 10s 2m make check
          no_output_timeout: 60s

  arm_clang:
    parameters:
      scheduler:
        type: string
      topology:
        type: string
    machine:
      image: ubuntu-2404:edge
    resource_class: arm.medium
    environment:
      CC: clang-18
      CXX: clang++-18
    steps:
      - checkout
      - run: |
          sudo apt-add-repository -y universe
          sudo apt-get install -y gcc-14 g++-14
          sudo apt-get install -y autoconf automake libtool
          sudo apt-get install -y hwloc libhwloc-dev
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository -y 'deb https://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main'
          sudo apt-get install -y clang-18
      - run: |
          ./autogen.sh
          ./configure --enable-picky --with-scheduler=<< parameters.scheduler >> -with-topology=<< parameters.topology >>
          make -j2
      - run:
          command: timeout --foreground -k 10s 2m make check
          no_output_timeout: 60s

  arm_sanitizers:
    parameters:
      scheduler:
        type: string
      topology:
        type: string
      sanitizer:
        type: string
    machine:
      image: ubuntu-2404:edge
    resource_class: arm.medium
    environment:
      CC: clang-18
      CXX: clang++-18
      CFLAGS: "-fsanitize=<< parameters.sanitizer >> -fno-sanitize-recover=all"
      CXXFLAGS: "-fsanitize=<< parameters.sanitizer >> -fno-sanitize-recover=all"
      LDFLAGS: "-fsanitize=<< parameters.sanitizer >> -fno-sanitize-recover=all"
      QTHREAD_STACK_SIZE: 524288
      ASAN_OPTIONS: "check_initialization_order=1"
    steps:
      - checkout
      - run: |
          sudo apt-add-repository -y universe
          sudo apt-get install -y gcc-14 g++-14
          sudo apt-get install -y autoconf automake libtool
          sudo apt-get install -y hwloc libhwloc-dev
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository -y 'deb https://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main'
          sudo apt-get install -y clang-18
      - run: |
          ./autogen.sh
          ./configure --enable-picky --with-scheduler=<< parameters.scheduler >> -with-topology=<< parameters.topology >>
          make -j2
      - run:
          command: timeout --foreground -k 10s 4m make check
          no_output_timeout: 120s

  arm_acfl:
    parameters:
      scheduler:
        type: string
      topology:
        type: string
    machine:
      image: ubuntu-2204:2024.04.4
    resource_class: arm.medium
    environment:
      CC: armclang
      CXX: armclang++
    steps:
      - checkout
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y autoconf automake libtool
          sudo apt-get install -y hwloc libhwloc-dev
          wget -O acfl.tar https://developer.arm.com/-/media/Files/downloads/hpc/arm-compiler-for-linux/24-04/arm-compiler-for-linux_24.04_Ubuntu-22.04_aarch64.tar
          tar -vxf acfl.tar
          ./arm-compiler-for-linux_24.04_Ubuntu-22.04/arm-compiler-for-linux_24.04_Ubuntu-22.04.sh -a -f -s acfl
          rm acfl.tar
          sudo apt install -y ./acfl/gcc-13.2.0_Ubuntu-22.04.deb ./acfl/arm-linux-compiler-24.04_Ubuntu-22.04.deb
          rm -rf acfl
          export PATH=$PATH:/opt/arm/arm-linux-compiler-24.04_Ubuntu-22.04/bin
          armclang -v
      - run: |
          export PATH=$PATH:/opt/arm/arm-linux-compiler-24.04_Ubuntu-22.04/bin
          ./autogen.sh
          ./configure --enable-picky --with-scheduler=<< parameters.scheduler >> -with-topology=<< parameters.topology >>
          make -j2
      - run:
          command: |
              export PATH=$PATH:/opt/arm/arm-linux-compiler-24.04_Ubuntu-22.04/bin
              timeout --foreground -k 10s 4m make check
          no_output_timeout: 60s

  musl:
    parameters:
      worker_type:
        type: string
      scheduler:
        type: string
      topology:
        type: string
    docker:
      - image: alpine:latest
    resource_class: << parameters.worker_type >>
    steps:
      - checkout
      - run: |
          apk add --no-cache --no-progress bash make musl-dev hwloc-dev libtool autoconf automake gcc g++
      - run: |
          bash autogen.sh
          bash configure --enable-picky --with-scheduler=<< parameters.scheduler >> -with-topology=<< parameters.topology >>
          make -j2
      - run:
          command: make check
          no_output_timeout: 480s

workflows:
  build_and_test:
    jobs:
      - arm_gcc:
          matrix:
            parameters:
              scheduler: [nemesis, sherwood, distrib]
              topology: ['no', binders, hwloc]
      - arm_clang:
          matrix:
            parameters:
              scheduler: [nemesis, sherwood, distrib]
              topology: ['no', binders, hwloc]
      - arm_sanitizers:
          matrix:
            parameters:
              scheduler: [nemesis, sherwood, distrib]
              topology: ['no', binders, hwloc]
              sanitizer: [address, memory, thread, undefined]
      - arm_acfl:
          matrix:
            parameters:
              scheduler: [nemesis, sherwood, distrib]
              topology: ['no', binders, hwloc]
      - musl:
          matrix:
            parameters:
              worker_type: [medium, arm.medium]
              scheduler: [nemesis, sherwood, distrib]
              topology: ['no', binders, hwloc]

